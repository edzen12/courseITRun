# Типы данных
#     int 
#     str 
#     float 
#     bool 
#     list 
#     dict 
#     tuple 
#     set 

# операторы ариф + - * / ** // %
# операторы сравнения > < >= <= == != 

# переменные 

# условные операторы if elif else 

# циклы for while 

# исключения try except
# try:
#     code code 
# except ValueError()

# функции
#     встроенные функции
#     пользовательские функции

def calc(num1, num2, simbol):
    if simbol == "+":
        return num1+num2 
    elif simbol == "-":
        return f"ответ: {num1-num2}" 
    
# print(calc(10, 5, '-'))



# практика
# создать программу переводчик, будет переводить с англ на русс, также будет возможность добавлять новые слова и удалять ошибочные
dictSlovar = {
    'apple': 'яблоко',
    'pencil': 'ручка',
    'car': 'машина',
}
def SearchWord():
    word = input("введите слово: ")
    if word in dictSlovar.keys():
        return f"слово: {word} перевод: {dictSlovar[word]}" 
    else:
        return 'нет такого слова'
    

def AddWord():
    k = input("слово на англ: ")
    v = input("слово на русс: ")
    dictSlovar[k]=v 
    return dictSlovar
##################################
def deleteWord():
    k = input("слово которое удаляем: ")
    if k in dictSlovar:
        print(f'удалено слово "{dictSlovar[k]}"')
        del dictSlovar[k]
        return dictSlovar


while True:
    print("* 1: перевести слово")
    print("* 2: добавить слово")
    print("* 3: удалить слово")
    print("* 4: завершить программу")
    x = int(input("введите число вашего выбора: "))
    if x == 1:
        print(SearchWord())
    elif x == 2:
        print(AddWord())
    elif x == 3:
        print(deleteWord())
    elif x == 4:
        print("завершение программы!")
        break


# пиццерия
# 1 функция:программа спрашивает у юзера, будет ли он делать заказ или нет, если да то True, если нет , то завершение программы
# 2 функция: работает после первой, и дает пользователю выбор из пицц, программа спршивает не хочет ли он данную пиццу, если да то добавляет в наш список(корзина), и функция возвращает список
# 3 функция: перепроверка заказа, спршивает у юзера, такой ли он заказ делал, если да то отправляет дальше, если нет то перекидывает на 1 функцию
# 4 функция: подсчета наших заказов и выставления счета
#############################
# Задача: Управление кошельком
# Вам нужно реализовать программу для управления кошельком с поддержкой двух валют: USD и KGS. Программа должна позволять пользователю пополнять баланс, тратить средства и выводить информацию о состоянии кошелька.
# Условия задачи:
#  1. Создайте функцию для создания кошелька. Кошелек должен поддерживать только две валюты: USD или KGS. При попытке создать кошелек с другой валютой, программа должна выдать ошибку.
#  • При создании кошелька баланс всегда равен 0.
#  • В кошельке должно храниться имя владельца и валюта.
#  • Имя по умолчанию должно быть “Неизвестный”, если оно не указано.
#  2. Реализуйте функцию для пополнения баланса кошелька на указанную сумму.
#  3. Реализуйте функцию для списания средств с кошелька. Если средств недостаточно, программа должна вывести сообщение об ошибке и не позволить списание.
#  4. Реализуйте функцию для вывода информации о текущем состоянии кошелька: баланс и валюта.